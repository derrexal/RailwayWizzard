version: '3.4'


services:
  railwaywizzardapp:
    image: ${DOCKER_REGISTRY-}railwaywizzardapp
    build:
      context: .
      dockerfile: RailwayWizzard.Application/Dockerfile
    ports:
      - ":80"
    depends_on:
      - postgres_db
    networks:
      - my-network
    restart: always
    environment:
      - DB_CONNECTION_STRING=Host=postgres_db;Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ASPNETCORE_ENVIRONMENT=Production

  postgres_db:
    image: postgres:16
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    command: -p '${POSTGRES_PORT}'
    networks:
      - my-network
    restart: always

  bot_service:
    image: ${DOCKER_REGISTRY-}bot_service
    build:
      context: .
      dockerfile: RailwayWizzard.Bot/Dockerfile
    ports:
      - ":5000"
    volumes:
      - ./RailwayWizzard.Bot:/app
    working_dir: /app
    depends_on:
      - railwaywizzardapp
    networks:
      - my-network
    restart: always

networks:
  my-network:
    driver: "bridge"

volumes:
  postgres-data:
